- job-template:
    name: 'kubernetes-{build}'
    description: 'Grab the latest from GitHub, build. Test owner: Build Cop.'
    node: 'build'
    logrotate:
        numToKeep: 200
    builders:
        # Run a merge of all interesting branches prior to building; ensure that they can merge cleanly
        # Why do this here instead of the SCM plugin?
        # Frankly, the scm plugin is tricky to work with, especially for merging multiple remotes
        - shell: |
            #!/bin/bash
            set -x
            set -e
            git config --global user.email 'euank+jenkins-bot@coreos.com'
            git config --global user.name 'Jenkins Bot'
            MERGE_BRANCHES=(euank/rktnetes_e2e coreos/gce_coreos_rkt)
            fail() {{
              1>&2 echo "Error: $1"
              exit 1
            }}
            for ref in ${{MERGE_BRANCHES[@]}}; do
              remote=$(echo $ref | awk -F/ '{{print $1}}')
              branch=$(echo $ref | awk -F/ '{{print $2}}')
              # It's okay if the remote already exists
              git remote add $remote https://github.com/${{remote}}/kubernetes.git || true
              git branch -D ${{ref}} || true
              git fetch ${{remote}} ${{branch}}:${{ref}} || fail "Could not fetch ${{ref}}"
              git merge -m "Auto-merging $ref" $ref || fail "Could not merge ${{ref}}"
            done
        - shell: 'JENKINS_BUILD_STARTED=true bash <(curl -fsS --retry 3 "https://raw.githubusercontent.com/euank/kubernetes/rktnetes_e2e/hack/jenkins/upload-to-gcs.sh")'
        - shell: |
            export BUILD_PYTHON_IMAGE=true
            export KUBE_FASTBUILD=true
            timeout -k 90m 90m ./hack/jenkins/build.sh && rc=$? || rc=$?
            {report-rc}
    publishers:
        - claim-build
        - gcs-uploader
        - log-parser
        - email-ext:
            presend-script: $DEFAULT_PRESEND_SCRIPT
            fail: true
            fixed: true
            send-to:
                - recipients
    scm:
        - git:
            url: https://github.com/kubernetes/kubernetes
            branches:
                - '{branch}'
            browser: githubweb
            browser-url: https://github.com/kubernetes/kubernetes
            wipe-workspace: false
            skip-tag: true
    triggers:
        - pollscm:
            cron: 'H/2 * * * *'
    wrappers:
        - timeout:
            timeout: '{jenkins-timeout}'
            fail: true
        - timestamps
        - inject:
            properties-content: |
                # TODO, figure out a better way to set path correctly
                PATH=/home/jenkins/cloudsdk/google-cloud-sdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
                JENKINS_GCS_LOGS_PATH=gs://rktnetes-jenkins/logs
                KUBE_GCS_RELEASE_BUCKET=rktnetes-kubernetes-release
        - workspace-cleanup:
            dirmatch: true
            external-deletion-command: 'sudo rm -rf %s'

- project:
    name: kubernetes-builds
    build:
        - 'build':
            branch: 'master'
            timeout: 90
    jobs:
        - 'kubernetes-{build}'
