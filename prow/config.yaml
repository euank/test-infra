plank:
  job_url_template: 'https://prow.build-infra.jetstack.net/log?job={{.Spec.Job}}&id={{.Status.BuildID}}'
  report_template: ''

jenkins_operator:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://k8s-gubernator.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

sinker:
  resync_period: 1h
  max_prowjob_age: 48h
  max_pod_age: 1h

# deck:
#   external_agent_logs:
#   - agent: jenkins
#     url_template: 'http://jenkins-operator/job/{{.Spec.Job}}/{{.Status.BuildID}}/consoleText'

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

# tide:
#   queries:
#   - "type:pr state:open repo:kubernetes/test-infra label:lgtm label:approved -label:needs-ok-to-test -label:do-not-merge/work-in-progress -label:do-not-merge/hold label:\"cncf-cla: yes\""

# push_gateway:
#   endpoint: pushgateway


# job templates

# puppet module verify using ruby tooling
.puppet_module_verify: &puppet_module_verify
  always_run: true
  skip_report: false
  max_concurrency: 10
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/jetstack-build-infra/ruby-2.3:0.5
      args:
      - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
      - "--root=/workspace"
      - "--upload=gs://jetstack-logs/pr-logs"
      - "--clean"
      env:
      - name: BUNDLE_DIR
        value: /cache/bundle/$(JOB_NAME)
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: bundle-cache
        mountPath: /cache/bundle
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: bundle-cache
      hostPath:
        path: /var/lib/libvirt/caches/bundle
        type: Directory
  trigger: "(?m)^/(re)?test( all| verify| quick verify),?(\\s+|$)"
  rerun_command: "/test verify"

# puppet module acceptance tests using ruby tooling, elevated privileges due
# to requirement to run nested VMs
.puppet_module_acceptance: &puppet_module_acceptance
  always_run: true
  skip_report: false
  max_concurrency: 2
  agent: kubernetes
  spec:
    nodeSelector:
      node-role.kubernetes.io/libvirt: ""
    # Note: this is not supported yet by prow PodSpec, taint temporary removed
    tolerations:
    - effect: NoSchedule
      key: dedicated
      operator: Equal
    containers:
    - image: gcr.io/jetstack-build-infra/ruby-2.3:0.5
      args:
      - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
      - "--root=/workspace"
      - "--upload=gs://jetstack-logs/pr-logs"
      - "--clean"
      env:
      - name: BUNDLE_DIR
        value: /cache/bundle/$(JOB_NAME)
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: bundle-cache
        mountPath: /cache/bundle
      - name: vagrant-boxes
        mountPath: /root/.vagrant.d/boxes
      - mountPath: /var/run/libvirt/libvirt-sock
        name: var-run-libvirt-libvirt-sock
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: bundle-cache
      hostPath:
        path: /var/lib/libvirt/caches/bundle
        type: Directory
    - name: vagrant-boxes
      hostPath:
        path: /var/lib/libvirt/caches/vagrant-boxes
        type: Directory
    - name: var-run-libvirt-libvirt-sock
      hostPath:
        path: /var/run/libvirt/libvirt-sock
        type: Socket
  trigger: "(?m)^/(re)?test( all| acceptance),?(\\s+|$)"
  rerun_command: "/test acceptance"

# kubernetes golang project image with minikube and go installed
# with support for libvirt
.minikube_in_go_1_7: &minikube_in_go_1_7
  skip_report: false
  max_concurrency: 2
  agent: kubernetes
  spec:
    nodeSelector:
      node-role.kubernetes.io/libvirt: ""
    # Note: this is not supported yet by prow PodSpec, taint temporary removed
    tolerations:
    - effect: NoSchedule
      key: dedicated
      operator: Equal
    containers:
    - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.7.10:0.2
      args:
      - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
      - "--root=/go/src"
      - "--upload=gs://jetstack-logs/pr-logs"
      - "--clean"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: MINIKUBE_HOME
        value: /var/lib/libvirt/caches/minikube
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: var-lib-libvirt
        mountPath: /var/lib/libvirt
      - name: var-run-libvirt-libvirt-sock
        mountPath: /var/run/libvirt/libvirt-sock
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: var-lib-libvirt
      hostPath:
        path: /var/lib/libvirt
        type: Directory
    - name: var-run-libvirt-libvirt-sock
      hostPath:
        path: /var/run/libvirt/libvirt-sock
        type: Socket

.minikube_in_go_1_8: &minikube_in_go_1_8
  skip_report: false
  max_concurrency: 2
  agent: kubernetes
  spec:
    nodeSelector:
      node-role.kubernetes.io/libvirt: ""
    # Note: this is not supported yet by prow PodSpec, taint temporary removed
    tolerations:
    - effect: NoSchedule
      key: dedicated
      operator: Equal
    containers:
    - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.8.3:0.2
      args:
      - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
      - "--root=/go/src"
      - "--upload=gs://jetstack-logs/pr-logs"
      - "--clean"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: MINIKUBE_HOME
        value: /var/lib/libvirt/caches/minikube
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: var-lib-libvirt
        mountPath: /var/lib/libvirt
      - name: var-run-libvirt-libvirt-sock
        mountPath: /var/run/libvirt/libvirt-sock
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: var-lib-libvirt
      hostPath:
        path: /var/lib/libvirt
        type: Directory
    - name: var-run-libvirt-libvirt-sock
      hostPath:
        path: /var/run/libvirt/libvirt-sock
        type: Socket

presubmits:
  jetstack/navigator:
  - name: navigator-quick-verify
    always_run: true
    skip_report: false
    context: navigator-quick-verify
    max_concurrency: 10
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/gcloud-in-go:0.4
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
      volumes:
      - name: service
        secret:
          secretName: service-account
    trigger: "(?m)^/(re)?test( all| verify| quick verify),?(\\s+|$)"
    rerun_command: "/test verify"
  - <<: *minikube_in_go_1_7
    name: navigator-e2e-v1-7
    context: navigator-e2e-v1-7
    always_run: false
    trigger: "(?m)^/(re)?test( all| e2e( v?1.7)?),?(\\s+|$)"
    rerun_command: "/test e2e v1.7"
  - <<: *minikube_in_go_1_8
    name: navigator-e2e-v1-8
    context: navigator-e2e-v1-8
    always_run: false
    trigger: "(?m)^/(re)?test( all| e2e( v?1.8)?),?(\\s+|$)"
    rerun_command: "/test e2e v1.8"

  jetstack/puppet-module-kubernetes:
  - <<: *puppet_module_verify
    name: puppet-module-kubernetes-quick-verify
    context: puppet-module-kubernetes-quick-verify
  - <<: *puppet_module_acceptance
    name: puppet-module-kubernetes-acceptance
    context: puppet-module-kubernetes-acceptance

  jetstack/puppet-module-etcd:
  - <<: *puppet_module_verify
    name: puppet-module-etcd-quick-verify
    context: puppet-module-etcd-quick-verify
  - <<: *puppet_module_acceptance
    name: puppet-module-etcd-acceptance-single-node
    context: puppet-module-etcd-acceptance-single-node
  - <<: *puppet_module_acceptance
    name: puppet-module-etcd-acceptance-three-node
    context: puppet-module-etcd-acceptance-three-node

postsubmits:
